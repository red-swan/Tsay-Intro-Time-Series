{
    "collab_server" : "",
    "contents" : "# Author: Dr. Ruey Tsay\n# Editor: Jared Swan\n\nsource('0-setup.R')\n\n# 1.4.2 # Using the quantmod package -------------------------------------------\nusePackage(quantmod)   # Load the package\ngetSymbols(\"AAPL\")  # Download daily prices of Apple stock from Yahoo\ndim(AAPL)  # (dimension): See the size of the downloaded data.\nhead(AAPL)  # See the first 6 rows of the data\ntail(AAPL)   # See the last 6 rows of the data \nchartSeries(AAPL,theme=\"white\")  # Plot the daily price and volume\nchartSeries(AAPL)#Not shown giving the same plot with black background.\ngetSymbols(\"AAPL\",from=\"2005-01-02\", to=\"2010-12-31\")\nhead(AAPL)\ngetSymbols(\"UNRATE\",src=\"FRED\")#Download unemployment rates from FRED.\nhead(UNRATE)\nchartSeries(UNRATE,theme=\"white\")  # Plot monthly unemployment rates\ngetSymbols(\"INTC\",src=\"google\")  # Download data from Google.\nhead(INTC)\ngetSymbols(\"^TNX\") # Download CBOE 10-year Treasures Notes\nhead(TNX)  \nchartSeries(TNX,theme=\"white\",TA=NULL) # Obtain plot without volume.\n\n# 1.4.3 # Some Basic R Commands ------------------------------------------------\nusePackage(fBasics) # Load package\nda <- read.table('data/1-d-ibm-0110.txt',header=T) # Load text data with names.\nhead(da) # See the first 6 rows\ndim(da)  # Dimension of the data object \"da\".\nda <- read.table(\"data/1-d-vix0411.txt\",header=T) # Load csv data with names.\n\n# 1.5 # Examples of Financial Data ---------------------------------------------\nlibrary(quantmod)\ngetSymbols(\"AAPL\",from=\"2007-01-03\",to=\"2011-12-02\") #Specify period\nAAPL.rtn=diff(log(AAPL$AAPL.Adjusted)) # Compute log returns\nchartSeries(AAPL.rtn,theme=\"white\")\ngetSymbols(\"^TNX\",from=\"2007-01-03\",to=\"2011-12-02\")\nTNX.rtn <- diff(TNX$TNX.Adjusted) # Compute changes\nchartSeries(TNX.rtn,theme=\"white\")\ngetSymbols(\"DEXUSEU\",src=\"FRED\") #Obtain exchange rates from FRED\nhead(DEXUSEU)\ntail(DEXUSEU)\nUSEU.rtn=diff(log(DEXUSEU$DEXUSEU))\nchartSeries(DEXUSEU,theme=\"white\")\nchartSeries(USEU.rtn,theme=\"white\")\n# 1.6 # Distributional Properties of Returns -----------------------------------\nusePackage(fBasics) # Load package\nda <- read.table(\"data/1-d-mmm-0111.txt\",header=T) # Load data\n# header=T means the first row of data file contains names.\n# deafult is no names.\nhead(da) #Show the first 6 rows of data\nmmm <- da[,2]  # Obtain 3m simple returns\nbasicStats(mmm) #Compute summary statistics\nmean(mmm)\nvar(mmm)\nstdev(mmm) # standard deviation\nt.test(mmm)  # Testing mean return = 0\ns3=skewness(mmm)\nT=length(mmm) # Sample size\nt3=s3/sqrt(6/T) # Skewness test\npp=2*(1-pnorm(t3)) # Compute p-value\ns4=kurtosis(mmm)\nt4=s4/sqrt(24/T) # Kurtosis test\nnormalTest(mmm,method='jb') # JB-test\n# 1.7 # Visualization of Financial Data ----------------------------------------\nlibrary(fBasics)\nda <- read.table(\"d-mmm-0111.txt\",header=T) # Load data\nmmm <- da[,2] # Locate 3M simple returns\nhist(mmm,nclass=30) # Histogram\nd1 <- density(mmm)  # Obtain density estimate\nrange(mmm)  # Range of 3M returns\nx <- seq(-.1,.1,.001) # Create a sequence of x with increment 0.001.\ny1 <- dnorm(x,mean(mmm),stdev(mmm))\nplot(d1$x,d1$y,xlab='rtn',ylab='density',type='l')\nlines(x,y1,lty=2)\nlibrary(quantmod)\ngetSymbols(\"AAPL\",from=\"2011-01-03\",to=\"2011-06-30\")\nX <- AAPL[,1:4] # Locate open, high, low, and close prices\nxx <- cbind(as.numeric(X[,1]),as.numeric(X[,2]),as.numeric(X[,3]),as.numeric(X[,4]))\nsource(\"ohlc.R\") # Compile the R script\nohlc(xx,xl=\"days\",yl=\"price\",title=\"Apple Stock\")\nsource(\"ma.R\")  # Compile R script\ngetSymbols(\"AAPL\",from=\"2010-01-02\",to=\"2011-12-08\")\nx1 <- as.numeric(AAPL$AAPL.Close) # Locate close price\nma(x1,21)\nda <- read.table(\"m-ibmsp-2611.txt\",header=T)\nhead(da)\nibm <- log(da$ibm+1) # Transform to log returns\nsp <- log(da$sp+1)\ntdx <- c(1:nrow(da))/12+1926 # Create time index\npar(mfcol=c(2,1))\nplot(tdx,ibm,xlab='year',ylab='lrtn',type='l')\ntitle(main='(a) IBM returns')\nplot(tdx,sp,xlab='year',ylab='lrtn',type='l') # X-axis first.\ntitle(main='(b) SP index')\ncor(ibm,sp)  # Obtain sample correlation\nm1 <- lm(ibm~sp)  # Fit the Market Model (linear model)\nsummary(m1)\nplot(sp,ibm,cex=0.8)  # Obtain scatter plot\nabline(0.008,.807) # Add the linear regression line\n# 1.8.5 # Multivariate Returns -------------------------------------------------\nda <- read.table(\"data/1-m-ibmsp-2611.txt\",header=T) #Load  data\ndim(da)\nibm <- log(da$ibm+1) # Compute log returns\nsp <- log(da$sp+1)\nrt <- cbind(ibm,sp) # Obtain bivariate returns\nm1 <- apply(rt,2,mean) # Obtain sample means\nv1 <- cov(rt) # Obtain sample covariance matrix\nm1\nv1\nlibrary(mnormt) # Load package\nx <- rmnorm(1029,mean=m1,varcov=v1) # Simulation\ndim(x)\nplot(x[,2],x[,1],xlab='sim-sp',ylab='sim-ibm',cex=0.8)\n",
    "created" : 1484752698249.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "404618723",
    "id" : "4749D82D",
    "lastKnownWriteTime" : 1484754038,
    "last_content_update" : 1484754038033,
    "path" : "C:/Users/JDKS/Applications/Github/Tsay-An-Introduction-to-Analysis-of-Financial-Data-With-R/scripts/1-ch1Rscripts.R",
    "project_path" : "scripts/1-ch1Rscripts.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}